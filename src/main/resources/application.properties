##for db migrating
#true: showing sql scripts in logs that was generated by hibernate
spring.jpa.show-sql=false
#regime in which hibernate generates DB
spring.jpa.hibernate.ddl-auto=validate
#validate: hibernate rather to update or create DB, hibernate will check the correctness of our domain model with DB
# Here, spring.jpa.hibernate.ddl-auto can be none, update, create, or create-drop.
#   none: The default for MySQL. No change is made to the database structure.
#   update: Hibernate changes the database according to the given entity structures.
#   create: Creates the database every time but does not drop it on close.
#   create-drop: Creates the database and drops it when SessionFactory closes.
# You must begin with either create or update, because you do not yet have the database structure.
# After the first run, you can switch it to update or none, according to program requirements.
# Use update when you want to make some change to the database structure.



#spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/sweater2
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${SWEATER_USERNAME}
spring.datasource.password=${SWEATER_PASSWORD}
spring.jpa.generate-ddl=false

#turn on additional attributes for web template(we need: csrf)
spring.freemarker.expose-request-attributes=true

#file storage
upload.path=/home/anton/IdeaProjects/Sweater2.0/sweater-file-placeholder/uploads
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
#   max-file-size: The maximum size allowed for uploaded files, in bytes. If the size of any uploaded file is greater
#than this size, the web container will throw an exception (IllegalStateException). The default size is unlimited.
#   max-request-size: The maximum size allowed for a multipart/form-data request, in bytes. The web container will throw an
#exception if the overall size of all uploaded files exceeds this threshold. The default size is unlimited.


#necessary config for mail sender
spring.mail.host=smtp.gmail.com
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_PASSWORD}
#port for SSL: 465
#port for TLS/STARTTLS: 587
spring.mail.port=465
#if authentication is needed than: spring.mail.protocol=smtps
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
mail.debug=false
